spring:
  application:
    name: iot-c-collector
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:iotc}
    username: ${DB_USER:iotc}
    password: ${DB_PASSWORD:iotc}
    continue-on-error: true
  sql.init.continue-on-error: true
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    hibernate:
      ddl-auto: update
  output:
    ansi:
      enabled: ALWAYS

logging:
  level:
    com.gmos.iotc.collector.service: ${LOG_LEVEL:DEBUG}
#    com.gmos.iotc.collector.service: ${LOG_LEVEL:WARN}
    com.gmos.iotc: ${LOG_LEVEL:DEBUG}


server:
  port: ${TOMCAT_HTTP_PORT_V:8092}

grpc:
  server:
    port: ${GRPC_SERVER_PORT:9091} # default it 9090

# prometheus
management:
  endpoints.web.exposure.include: "info, health, prometheus"
  #  metrics.enable.jvm: false
  metrics.tags:
    instanceHostName: ${HOSTNAME:localhost}
    application: iot-c
    service: iot-c-collector

# jaeger
opentracing:
  jaeger:
    enabled: ${JAEGER_ENABLED:true}
    probabilistic-sampler:
      sampling-rate: ${JAEGER_SAMPLING_RATE:0.0} # Where value is between 0.0 (no sampling) and 1.0 (sampling of every request)
#    udp-sender:
#      host: ${JAEGER_HOST:localhost}
#      port: ${JAEGER_PORT:6831}
    http-sender:
      url: ${JAEGER_HOST_HTTP_URL:http://localhost:14268/api/traces}
    log-spans: ${JAEGER_LOG_SPANS:true}

iot-collector:
  dev-mode-enabled: ${DEV_MODE_ENABLED:false}
  collector-scheduler-enabled: ${COLLECTOR_SCHEDULER_ENABLED:true}