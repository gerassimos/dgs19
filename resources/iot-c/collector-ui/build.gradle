plugins {
	id "java"
	id "idea"
	id "org.springframework.boot" version "${springBootVersion}"
	id "io.spring.dependency-management" version "${springDepMgmVersion}"
	id "com.palantir.docker" version "${palantirDockerVersion}"
}

def iotcTAG = findProperty('IOTC_TAG') ?: 'latest'
def dockerUsername = findProperty('DOCKER_USERNAME') ?: 'username'

group = 'com.gmos.iot-c'
version = "${iotcTAG}"
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dockerPrepare{
	dependsOn build
}

docker {
	dependsOn build
	name "iot-${bootJar.archiveBaseName.get()}:${iotcTAG}"
	tag 'tag1', "${dockerUsername}/iot-${bootJar.archiveBaseName.get()}:${iotcTAG}"
	tag 'tag2', "anOtherRepository"
//	files bootJar.archiveFile.get()
	files bootJar.archiveFile.get(), '../utils/otel/opentelemetry-javaagent.jar'
	buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}", 'IOTC_TAG': "${version}"])
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-devtools")
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('io.micrometer:micrometer-registry-prometheus')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation(project(":common"))
	implementation(project(":common-grpc"))
	implementation("net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE")
}
